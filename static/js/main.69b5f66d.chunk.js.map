{"version":3,"sources":["methods/executeCommand.js","components/RichtextToolbarButton.js","components/SymbolsConsole.js","components/RichtextToolbar.js","App.js","index.js"],"names":["executeCommand","action","value","document","execCommand","getElementById","style","background","queryCommandState","RichtextToolbarButton","title","className","text","onMouseDown","e","preventDefault","id","onClick","activeElement","SymbolsConsole","symbols","onMouseOver","visibility","onMouseOut","map","letter","greekAlphabet","mathSymbols","RichtextToolbar","size","App","useEffect","actionList","textEditor","addEventListener","forEach","contentEditable","placeholder","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.69b5f66d.chunk.js","sourcesContent":["export default function executeCommand(action, value) {\r\n    document.execCommand(action, false, value);\r\n    if(action===\"justifyLeft\"||action===\"justifyCenter\"||action===\"justifyRight\"||action===\"justifyFull\"){\r\n        document.getElementById(`btn-justifyLeft`).style.background = \"lightgray\";\r\n        document.getElementById(`btn-justifyCenter`).style.background = \"lightgray\";\r\n        document.getElementById(`btn-justifyRight`).style.background = \"lightgray\";\r\n        document.getElementById(`btn-justifyFull`).style.background = \"lightgray\";\r\n    }\r\n    if(action===\"superscript\"||action===\"subscript\"){\r\n        document.getElementById(`btn-superscript`).style.background = \"lightgray\";\r\n        document.getElementById(`btn-subscript`).style.background = \"lightgray\";\r\n    }\r\n    document.queryCommandState(action)?\r\n        document.getElementById(`btn-${action}`).style.background = \"darkgray\"\r\n        :document.getElementById(`btn-${action}`).style.background = \"lightgray\";\r\n}","import React from 'react'\r\n\r\nimport executeCommand from '../methods/executeCommand'\r\n\r\nconst RichtextToolbarButton = ({ title, className=\"richtextToolbarButton\", action, value=null, text }) => {\r\n    return (\r\n        <button\r\n            title={title}\r\n            className={className}\r\n            onMouseDown={(e)=>e.preventDefault()}\r\n            id={`btn-${action}`}\r\n            onClick={(e)=>{\r\n                if (document.activeElement.id!==\"tytul\") executeCommand(action, value)\r\n                else if (action !== \"bold\") executeCommand(action, value)\r\n            }}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default RichtextToolbarButton;","import React from 'react'\r\nimport RichtextToolbarButton from './RichtextToolbarButton'\r\n\r\nconst SymbolsConsole = ({id, symbols}) => {\r\n    return (\r\n        <div\r\n            onMouseOver={()=>document.getElementById(id).style.visibility=\"visible\"}\r\n            onMouseOut={()=>document.getElementById(id).style.visibility=\"hidden\"}\r\n            id={id}\r\n        >\r\n            {symbols.map(letter=><RichtextToolbarButton className=\"symbolsConsoleButton\" action=\"insertHtml\" value={letter} text={letter}/>)}\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SymbolsConsole","import React from 'react'\r\nimport SymbolsConsole from './SymbolsConsole';\r\n\r\nimport {\r\n    AiOutlineOrderedList,\r\n    AiOutlineAlignLeft, AiOutlineAlignCenter, AiOutlineAlignRight, AiOutlineMenu,\r\n    AiOutlineUndo, AiOutlineRedo\r\n} from \"react-icons/ai\"\r\n\r\nimport RichtextToolbarButton from './RichtextToolbarButton';\r\n\r\nconst greekAlphabet = [\"α\", \"β\", \"γ\", \"δ\", \"ε\", \"ζ\", \"η\", \"θ\", \"ι\", \"κ\", \"λ\", \"μ\", \"ν\", \"ξ\", \"ο\", \"π\", \"ρ\", \"σ\", \"τ\", \"υ\", \"φ\", \"χ\", \"ψ\", \"ω\"]\r\nconst mathSymbols = [\"°\", \"±\", \"÷\", \"∞\", \"Σ\", \"√\", \"∛\", \"∫\", \"∅\", \"∆\", \"≤\", \"≥\"]\r\n\r\nconst RichtextToolbar = () => {\r\n    \r\n    return (\r\n        <div id=\"richtextToolbarWrapper\">\r\n            <RichtextToolbarButton action=\"bold\" title=\"pogrubienie\" text={<b>B</b>} />\r\n\r\n            <RichtextToolbarButton action=\"underline\" title=\"podkreślenie\" text={<u>U</u>} />\r\n\r\n            <RichtextToolbarButton action=\"italic\" title=\"kursywa\" text={<i>I</i>} />\r\n\r\n            <RichtextToolbarButton action=\"superscript\" title=\"indeks górny\" text={<span>x<sup>n</sup></span>} />\r\n\r\n            <RichtextToolbarButton action=\"subscript\" title=\"indeks dolny\" text={<span>x<sub>n</sub></span>} />\r\n\r\n            <RichtextToolbarButton action=\"insertOrderedList\" title=\"lista numerowana\" text={<AiOutlineOrderedList size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"insertUnorderedList\" title=\"lista nienumerowana\" text=\"•\" />\r\n\r\n            <button\r\n                title=\"alfabet grecki\" \r\n                onClick={(e)=>e.preventDefault()}\r\n                onMouseOver={()=>document.getElementById(\"greekLettersConsole\").style.visibility=\"visible\"}\r\n                onMouseOut={()=>document.getElementById(\"greekLettersConsole\").style.visibility=\"hidden\"}\r\n                className=\"richtextToolbarButton\">\r\n                α β\r\n            </button>\r\n\r\n            <SymbolsConsole id=\"greekLettersConsole\" symbols={greekAlphabet}/>\r\n\r\n            <button\r\n                title=\"symbole matematyczne\" \r\n                onClick={(e)=>e.preventDefault()}\r\n                onMouseOver={()=>document.getElementById(\"mathSymbolsConsole\").style.visibility=\"visible\"}\r\n                onMouseOut={()=>document.getElementById(\"mathSymbolsConsole\").style.visibility=\"hidden\"}\r\n                className=\"richtextToolbarButton\">\r\n                ±\r\n            </button>\r\n            \r\n            <SymbolsConsole id=\"mathSymbolsConsole\" symbols={mathSymbols}/>\r\n\r\n            <RichtextToolbarButton action=\"undo\" title=\"cofnij zmianę\" text={<AiOutlineUndo size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"redo\" title=\"przywróć zmianę\" text={<AiOutlineRedo size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"justifyLeft\" title=\"wyrównanie do lewej\" text={<AiOutlineAlignLeft size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"justifyCenter\" title=\"wyrównanie do środka\" text={<AiOutlineAlignCenter size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"justifyRight\" title=\"wyrównanie do prawej\" text={<AiOutlineAlignRight size={20}/>} />\r\n\r\n            <RichtextToolbarButton action=\"justifyFull\" title=\"justowanie\" text={<AiOutlineMenu size={20}/>} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RichtextToolbar;","import React, {useEffect} from 'react'\nimport RichtextToolbar from './components/RichtextToolbar'\n\nfunction App() {\n\n  useEffect(()=>{\n    const actionList=[\"bold\",\"underline\",\"italic\",\"superscript\",\"subscript\",\"insertOrderedList\",\"insertUnorderedList\",\"justifyLeft\",\"justifyCenter\",\"justifyRight\",\"justifyFull\"]\n\n    const textEditor = document.getElementById(\"richtext-editor\")\n\n    textEditor.addEventListener(\"click\", ()=>{\n        actionList.forEach(action=>{\n            document.queryCommandState(action)?\n            document.getElementById(`btn-${action}`).style.background = \"darkgray\"\n            :document.getElementById(`btn-${action}`).style.background = \"lightgray\";\n        })\n    })\n    textEditor.addEventListener(\"keyup\", ()=>{\n        actionList.forEach(action=>{\n            document.queryCommandState(action)?\n            document.getElementById(`btn-${action}`).style.background = \"darkgray\"\n            :document.getElementById(`btn-${action}`).style.background = \"lightgray\";\n        })\n    })\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <RichtextToolbar />\n      <div contentEditable=\"true\" id=\"richtext-editor\" placeholder=\"Please start typing...\"/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport './styles/richtextToolbar.css'\nimport './styles/richtextEditor.css'\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}